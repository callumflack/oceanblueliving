

// --------------------------------------------------------------------------
//   NAV COMPONENT
// --------------------------------------------------------------------------


.Nav {
	opacity: 0;
	transform: translateY(20px);
	transition: all map-fetch($transition, duration, long) map-fetch($transition, type, base);

	@include respond-to(xs) {
	}

	// Color the hamburger icon
	//@include when-inside(".Home") { color: palette(white); }
	//@include when-inside(".about") { color: palette(white); }
	//@include when-inside(".Modal") { color: palette(white); }
}

/* uncss:ignore */
.Modal.is-active .Nav {
	opacity: 1;
	transform: translateY(0);
	transition: all map-fetch($transition, duration, long) map-fetch($transition, type, fine) 250ms;
}

.Nav-list {
	@include listClean();
	@include sectionSpace--xsTop();
	margin-bottom: 0;

	@include media-breakpoint-up(lg) {
		@include listInline();
	}
}

.Nav-list + .Nav-list {
	padding-top: $vertSpaceXs * 0.9;
}

.Nav-title {
	@include headlineSm();
	color: palette(white);
	margin-bottom: 0;
	@include media-breakpoint-down(md) { margin-bottom: space(1.25); }

	a {
		@include noLink();
	}
}

$infoColor: rgba( palette(white), 0.5 );

.Nav-info {
	@include TextMd($mixinFont: $font-sans-light);
	color: $infoColor;

	@include media-breakpoint-up(lg) {
		&:not(:last-child) {
			border-right: 1px solid rgba( palette(white), 0.25 );
			margin-right: space(0.8) !important;
			padding-right: space(1);
		}
	}
}


// Nav toggle
// --------------------------------------------------------------------------

.Nav-toggle {
	@include baseTransition;
	content: "buggyfill";
	display: inline;
	position: fixed;
	// top: space(4);
	top: $vertSpaceXs;
	right: space(1);
	z-index: 9;

	@include respond-to(sm) {
		// top: space(4);
		// top: $vertSpace;
		// right: 6vw;
		right: $vertSpaceXs;
	}

	// Color the hamburger icon
	@include when-inside(".home")  { color: palette(white); }
	@include when-inside(".about") { color: palette(white); }
	@include when-inside(".blog")  { color: palette(white); }
}

// Make the header nav fixed and animate down into view on scroll
// Req's: component.fixedheaderanimation.js
// See: http://codepen.io/Craig-Watson/pen/zGbNRL

$FixedNavHeight: rem(220);

.Nav-toggle--transition {
	position: fixed;
	transform: translateY( -#{$FixedNavHeight} );
	transition-duration: map-fetch($transition, duration, long);
}
