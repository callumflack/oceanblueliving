

// --------------------------------------------------------------------------
//   COMPONENT: BLOG POSTS
// --------------------------------------------------------------------------


// When a post is an article.
.Post--article {
    background-color: palette(background);
}

.Post--article-ruleOff {
    border-bottom: 1px solid palette(base);
    //content: "buggyfill";
    //padding-bottom: space(5);
    //padding-bottom: 8.5vh;
    padding-bottom: $vertSpaceXs;
}

// When a post is also a link.
// These are vertically & horizontally centered.
// See: https://philipwalton.github.io/solved-by-flexbox/demos/vertical-centering/

a.Post--inList {
    // @include baseTransition();
    align-items: center;
    display: flex;
    height: 100%;
    //justify-content: center;
    //margin-bottom: $gutterSpaceLg;
    opacity: 1;

    + .Post {
        margin-top: space(3.25);
        margin-top: 4vh;
    }

    > .Post-contentAligner {
        flex: 1;
    }

    @include on-event() {
        .CoverImage,
        .Post-image {
            @include baseTransition();
            opacity: 0.5;
        }
    }
}

.Post-image > img {
    width: 100%;
}

.Post-header {
    @include sectionSpace--sm();
}

.Post-meta {
    @include TextSm();
    color: palette(muted);
    margin: space(0.5) 0;
    text-align: center;

    @include when-inside(".Post--inList") {
        margin-bottom: 0;
        text-align: left;
    }
}

.Post-tag,
.Post-date {
}

.Post-title {
    @include headlineRg();

    @include respond-to(sm) {
        margin: 0 auto;
        width: 70%;
    }
    
    @include when-inside(".Header--rev") {
        color: palette(white);
    }
}

.Post-title + p {
    @include TextMd();
}

.Post-subtitle {
    @include headlineSm();
    margin: space(1) 0 0 0;
    text-align: left;

    @include media-breakpoint-down(sm) {
        width: 85%;
    }
}

.Post-author {
    @include TextSm();
}



// Pathway
// --------------------------------------------------------------------------

a.Post-pathway {
    @include rule( 1px, palette(base) );
    background-color: palette(background);
    display: block;
    margin: 0 auto;
    max-width: size(container, text-column);
    padding: space(2) space(1);
    position: relative;

    @include respond-to(xs) {
        max-width: size(container, text-column);
        padding: space(6) 0;
    }
}
