

// --------------------------------------------------------------------------
// FLICKITY THEME COMPONENT
// --------------------------------------------------------------------------


// Because I'm using FlexEmbed as child content,
// not an img.
.carousel-cell {
	width: 100%;
}

//a.carousel-cell {
//	// @include u-link(none);
//	transition: none;
//}



// Page dots
// --------------------------------------------------------------------------

.carousel .flickity-page-dots {
    bottom: space(-2);

    //@include media-breakpoint-up(lg) {
    //    display: none;
    //}
}

.home .flickity-page-dots .dot {
    background-color: palette(background);
}



// Gallery-cell ratios
// --------------------------------------------------------------------------

.carousel .FlexEmbed-ratio {
	padding-bottom: 70%;
	@include respond-to(lg) { padding-bottom: 56.25%; }
}



// Hero fade effect hack
// See: http://codepen.io/eikeco/pen/MwGRKr?editors=1100
// See: http://codepen.io/Tumki/pen/JXOyvp?editors=1100
// --------------------------------------------------------------------------

.carousel--fade {
	.flickity-slider {
		transform: none !important;
	}

	.carousel-cell {
		left: 0 !important;
		opacity: 0.1;
		transition: opacity 1700ms ease-in-out;
		z-index: -1;
	}

	.carousel-cell.is-selected {
		opacity: 1;
		z-index: 0
	}
}


// 'Draggable' like instrument.com
// --------------------------------------------------------------------------

.carousel--dragger {
	.carousel-cell {
		cursor: grab;
		// opacity: 0.5;
		transition: scale map-fetch($transition, duration, long) map-fetch($transition, type, thisalso);

		@include media-breakpoint-up(xl) {
			max-width: size(container, default);
		}
	}

	.carousel-cell.is-selected {
		transform: scale(1);
		transition: scale map-fetch($transition, duration, long) map-fetch($transition, type, thisalso);
	}

	@include media-breakpoint-up(sm) { .carousel-cell { transform: scale(0.7); } }
	@include media-breakpoint-up(su) { .carousel-cell { transform: scale(0.5); } }

}

.carousel--light {
	@include media-breakpoint-up(sm) {
		.carousel-cell {
			filter: grayscale(100%);
			opacity: 0.3;
		}
		.carousel-cell.is-selected {
			filter: grayscale(0);
			opacity: 1;
		}
	}
}
